# Project plan

## Start-up phase
<!--
Covering the planning phase, this section should provide a relatively
detailed plan of how work will start on the project. This section is
important because projects need to get up and running quickly.


 - [ ] Setting up collaboration platform inc. code for contributors etc.
 - [ ] Licence decisions
 - [ ] Reporting framework
-->

In the start-up phase we will set up GitHub infrastructure (repo, CI, license, reporting), define the architecture, test retrieval on R docs, and announce the project to the community—delivering a console prototype, initial knowledge base, and public roadmap.  

## Technical delivery
<!--
Covering the actual delivery of the project this section should
provide at least a high-level description of the implementation.

Including target dates is really important as you need to be committed
and the ISC need to have a means of tracking delivery
-->

- **M1 – MVP (Month 3):** Minimal assistant with query classification, base R retrieval, basic answers, citations, and context retention.  
- **M2 – Enhanced Tools (Months 4–5):** Expand KB to ~100 packages; add CRAN search, safe code execution, and environment introspection.  
- **M3 – Autonomy & Error Handling (Months 6–7):** ReAct-style orchestration; sequential tool use; error-diagnosis module.  
- **M4 – Evaluation (Month 8):** LLM-judge scoring, user feedback, latency optimization, improved citation display.  
- **M5 – Deployment (Months 9–10):** CRAN packaging, MCP/LangChain integration, IDE add-in (e.g., RStudio gadget).  
- **M6 – Release (Months 11–12):** Documentation, tutorials, blog posts; v1.0 release and public announcement.  

**Progress tracking:** Bi-weekly mentor reviews and quarterly ISC updates.  


## Other aspects

<!--
How will you ensure that your work is available to the widest number
of people? Please specify the open-source or creative commons license(s)
you will use, how you will host your code so that others can contribute,
and how you will publicize your work. We encourage you to plan content
to be shared quarterly on the R Consortium blog.

 - [ ] Announcement post
 - [ ] Delivery blog post
 - [ ] Social media
 - [ ] UseR!
 - [ ] ISC meetings
-->

Open source (MIT/GPL) with GitHub/CRAN distribution and active community engagement (announcements, blogs, updates, conferences, ISC reports) to ensure transparency and reproducibility.  


## Budget & funding plan

<!--
Outline the milestones for development and how much funding will be
required for each stage (as payments will be tied to project milestone
completion). Each milestone should specify the work to be done and the
expected outcomes, providing enough detail for the ISC to understand
the scope of the project work and assess the likelihood of success.

We expect that most of the budget will be allocated
for labor costs. We do not cover indirect costs. The ISC grants cannot
cover such things as travel, lodging, food, journal publication fees,
or personal hardware. Cloud services may be covered if they are specific
to the project and the project period. The ISC reserves the right to vet
how funds are used for each project separately. If in doubt, please reach
out to us.
-->

Total request: **~$10,000**, allocated mainly to labor with milestone-based disbursement.  
- **Developer (~90%)**: 20 hrs/week for 12 months; funds released in two tranches.  
- **Community (~10%)**: Tutorials, testing support, incidental costs; unused funds forfeited.  

**Milestone-based funding plan**:  


| Milestone              | Timeline       | Work to be Done                        | Expected Outcome               | Budget |
|------------------------|----------------|----------------------------------------|--------------------------------|--------|
| MVP Completion         | Month 3        | Console prototype with retrieval & citation | Demo to ISC, early feedback   | 15%    |
| Enhanced RAG & Tools   | Months 4–5     | Expanded KB + tool integrations        | Advanced demo                  | 20%    |
| Agent Autonomy         | Months 6–7     | Multi-step reasoning, error handling   | Usable assistant               | 20%    |
| Evaluation & Tuning    | Month 8        | Evaluation harness + optimizations     | Quality assurance              | 15%    |
| Integration & Deployment | Months 9–10 | CRAN packaging, IDE add-in             | Public release candidate       | 15%    |
| Documentation & Release | Months 11–12 | Tutorials, blog posts, v1.0 release    | Final report & CRAN submission | 15%    |

This plan ensures that funds are directly tied to measurable progress and successful outcomes.  
